@page "/categories/create"
@page "/categories/edit/{Id:int}"
@using DtoModel
@using LearningCentreClientApp.Service.IService
@inject ICategoryService CategoryService
@inject NavigationManager _navigationManager

<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Category </h3>
    <div class="col-10">
        @if(IsLoading)
        {
            <div class="text-center">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        }
        else{
        <EditForm Model="Category"  OnValidSubmit="UpsertCategory">
            <DataAnnotationsValidator/>
            <div class="form-group">
                <label>Name</label>
                <InputText @bind-Value="Category.Name" class="form-control"></InputText>
                <ValidationMessage For="()=>Category.Name"></ValidationMessage>
            </div>
            <div class="form-group py-2">
                <button class="btn btn-primary">@Title</button>
                    <NavLink href="categories" class="btn btn-secondary">Back to List</NavLink>
            </div>
        </EditForm>
        }
    </div>
</div>
@code {
    [Parameter]
    public int Id{ get; set; }

    private CategoryDTO Category { get; set; } = new CategoryDTO();
    private String Title { get; set; } = "Create";
    private bool IsLoading { get; set; }
 
    protected override async Task OnInitializedAsync()
    { 
            if (Id == 0)
            {
                //create
                IsLoading = false;
            }
            else
            {
                //Update
                Title = "Update";
                await LoadCategory();
            }
    }


    private async Task LoadCategory()
    {
        IsLoading = true;
        StateHasChanged();
        Category = await CategoryService.GetCategoryById(Id);
        IsLoading = false;
        StateHasChanged();
    }

    private async Task UpsertCategory()  
    {
        // Category.Name="Button Clicked";
        if(Category.Id==0)
        {
            //create
            await CategoryService.CreateCategory(Category);
        }
        else
        {
            //update
            await CategoryService.UpdateCategory(Category);
        }
        _navigationManager.NavigateTo("categories");
    }
}



